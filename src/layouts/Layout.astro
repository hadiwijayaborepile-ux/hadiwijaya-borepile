---
import { SEO } from 'astro-seo';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { ViewTransitions } from 'astro:transitions';

interface Props {
	title: string;
  description?: string;
  keywords?: string[];
}

const { 
  title = 'Hadiwijaya Pondasi Persada - Jasa Bore Pile Profesional',
  description = 'Solusi fondasi bore pile terpercaya untuk semua skala proyek. Kami menyediakan jasa bore pile manual, mini crane, dan hydraulic dengan tim berpengalaman.', 
  keywords = ['jasa bore pile', 'fondasi bore pile', 'kontraktor fondasi', 'bore pile jakarta', 'bore pile indonesia', 'bore pile manual', 'bore pile mini crane', 'bore pile hydraulic']
} = Astro.props;
---

<!doctype html>
<html lang="id">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" />

    <SEO
      title={title}
      description={description}
      keywords={keywords}
      openGraph={{
        basic: {
          title: title,
          type: 'website',
          image: '/assets/img/og-image.jpg', 
          url: Astro.url,
        }
      }}
      extend={{
        meta: [
          {
            name: 'twitter:card',
            content: 'summary_large_image',
          },
        ],
        link: [
          {
            rel: 'canonical',
            href: Astro.url.href,
          }
        ]
      }}
    />

		<ViewTransitions />
	</head>
	<body>

		<Header/>

    <!-- The hero slot can be full-width, container is managed inside the component -->
		<slot name="hero" />

		<main>
			<slot/>
		</main>

		<Footer />

    <script is:inline>
      function initFaq() {
        const faqItems = document.querySelectorAll('.faq-item');
        faqItems.forEach(item => {
          const question = item.querySelector('.faq-question');
          question.addEventListener('click', () => {
            const answer = item.querySelector('.faq-answer');
            const icon = question.querySelector('i');
            const isOpen = item.classList.toggle('open');
            
            if (isOpen) {
              answer.style.maxHeight = answer.scrollHeight + 'px';
              icon.style.transform = 'rotate(180deg)';
            } else {
              answer.style.maxHeight = '0';
              icon.style.transform = 'rotate(0deg)';
            }
          });
        });
      }

      function initAll() {
        initFaq();
      }

      initAll();
      document.addEventListener('astro:after-swap', initAll);
    </script>
	</body>
</html>

<style is:global>
	:root {
		--primary-color: #FF6B00;
		--secondary-color: #222A7A;
		--background-color: #f8f9fa;
		--text-color: #333;
	}

	html {
		font-family: system-ui, sans-serif;
		background: var(--background-color);
    scroll-behavior: smooth;
	}

	body {
		margin: 0;
		overflow-x: hidden;
	}

  /* Remove main content constraint, handle it with .container instead */
	main {
    position: relative; /* Positioning context for children */
	}

  /* A helper class to constrain content width */
  .container {
    max-width: 1200px;
    margin-left: auto;
    margin-right: auto;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  section {
    padding-top: 5rem;
    padding-bottom: 5rem;
    /* REMOVED horizontal padding from here */
  }

  section h2 {
    font-size: 2.8rem;
    color: var(--secondary-color);
    margin-bottom: 3rem;
    text-align: center;
  }

</style>