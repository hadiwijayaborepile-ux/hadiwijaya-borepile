---
import Layout from '../../layouts/Layout.astro';
import PageHero from '../../components/PageHero.astro';
import { fetchAllProductSlugs, fetchProductBySlug } from '../../lib/woocommerce';

const { params, url } = Astro;
const slug: any = (params as any).slug;

const formatPrice = (val: any) => {
  const n = Number(val);
  if (!isFinite(n) || n === 0) return 'Harga tersedia via inquiry';
  return new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR', maximumFractionDigits: 0 }).format(n);
}

export async function getStaticPaths() {
  try {
    const slugs = await fetchAllProductSlugs(100);
    return slugs.map((s: string) => ({ params: { slug: s } }));
  } catch (err) {
    return [];
  }
}

let product = null;
try {
  product = await fetchProductBySlug(slug);
} catch (err) {
  try {
    const res = await fetch(`/api/woo.json?slug=${encodeURIComponent(slug)}`);
    if (res.ok) product = await res.json();
  } catch (e) {}
}

const title = product ? product.name : 'Produk Tidak Ditemukan';
const description = product ? (product.short_description || '').replace(/(<([^>]+)>)/gi, '') : 'Deskripsi tidak tersedia.';
const keywords: string[] = product && product.categories ? product.categories.map((c: any) => c.name) : [];
const mainImage = (product?.images?.length > 0) ? product.images[0].src : '/assets/img/default-product.png';
---

<Layout title={title} description={description} keywords={keywords}>
  <PageHero 
    title={product ? product.name : 'Produk Detail'} 
    subtitle="Detail informasi produk dan layanan kami"
  />

  {product ? (
    <div itemprop="mainEntity" itemscope itemtype="https://schema.org/Product">
      <meta itemprop="name" content={product.name} />
      <meta itemprop="image" content={mainImage} />
      <meta itemprop="description" content={(product.short_description || '').replace(/(<([^>]+)>)/gi, '')} />
      <meta itemprop="sku" content={product.sku || undefined} />
      <div itemprop="brand" itemscope itemtype="https://schema.org/Brand">
        <meta itemprop="name" content="Hadiwijaya Bore Pile" />
      </div>
      <div itemprop="offers" itemscope itemtype="https://schema.org/Offer">
        <meta itemprop="url" content={url.href} />
        <meta itemprop="priceCurrency" content="IDR" />
        <meta itemprop="price" content={product.price || undefined} />
        <link itemprop="availability" href="https://schema.org/InStock" />
        <div itemprop="seller" itemscope itemtype="https://schema.org/Organization">
          <meta itemprop="name" content="Hadiwijaya Bore Pile" />
        </div>
      </div>

      <div class="product-page-content">
        <main class="container">
          <nav itemprop="breadcrumb" itemscope itemtype="https://schema.org/BreadcrumbList">
            <ol style="list-style: none; display: flex; padding: 0;">
              <li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem" style="display: flex; align-items: center;">
                <a itemprop="item" href="/">
                  <span itemprop="name">Home</span>
                </a>
                <meta itemprop="position" content="1" />
                <span style="margin: 0 0.5rem;">/</span>
              </li>
              <li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem" style="display: flex; align-items: center;">
                <a itemprop="item" href="/services/jasa-bore-pile">
                  <span itemprop="name">Jasa</span>
                </a>
                <meta itemprop="position" content="2" />
                <span style="margin: 0 0.5rem;">/</span>
              </li>
              <li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem" style="display: flex; align-items: center;">
                <a itemprop="item" href={url.href}>
                    <span itemprop="name">{product.name}</span>
                </a>
                <meta itemprop="position" content="3" />
              </li>
            </ol>
          </nav>

          <div class="product-layout-grid">
            <div class="product-image-container">
              <img src={mainImage} alt={product.name} class="main-product-image" />
            </div>

            <div class="product-info-container">
              <h1 class="product-title-in-page" itemprop="name">{product.name}</h1>
              <div class="product-price">{formatPrice(product.price)}</div>
              {product.short_description && (
                <div class="product-short-description" set:html={product.short_description} />
              )}
              <button 
                class="btn btn-primary book-now-btn" 
                data-action="open-booking-modal" 
                data-service-name={product.name}
              >
                Pesan Sekarang
              </button>
            </div>
          </div>

          {product.description && (
            <section class="product-full-description">
              <div set:html={product.description}></div>
            </section>
          )}

        </main>
      </div>
    </div>
  ) : (
    <div class="container not-found">
      <h1>Produk tidak ditemukan</h1>
      <p>Maaf, produk "{slug}" tidak ditemukan.</p>
      <a href="/services/jasa-bore-pile" class="btn btn-primary">Kembali ke Layanan</a>
    </div>
  )}
  
</Layout>

<script is:inline>
document.addEventListener('DOMContentLoaded', () => {
  const tables = document.querySelectorAll('.product-full-description table');
  if (tables.length > 0) {
    tables.forEach(table => {
      // Get headers
      const headers = Array.from(table.querySelectorAll('thead th')).map(th => th.textContent.trim());
      
      // Process rows
      const rows = table.querySelectorAll('tbody tr');
      rows.forEach(row => {
        const cells = row.querySelectorAll('td');
        cells.forEach((cell, index) => {
          if (headers[index]) {
            cell.setAttribute('data-label', headers[index]);
          }
        });
      });
    });
  }
});
</script>

<style>
  .product-page-content { background-color: #fff; padding-bottom: 3rem; }
  .container { max-width: 1100px; margin: 0 auto; padding: 0 1rem; }
  nav[itemprop="breadcrumb"] { padding: 1.5rem 0; font-size: 0.9rem; color: #666; }
  nav[itemprop="breadcrumb"] a { color: var(--primary-color); text-decoration: none; }
  nav[itemprop="breadcrumb"] a:hover { text-decoration: underline; }
  .product-layout-grid { display: grid; grid-template-columns: 1fr; gap: 2rem; }
  @media (min-width: 768px) { .product-layout-grid { grid-template-columns: 4fr 5fr; gap: 3rem; } }
  .main-product-image { width: 100%; border-radius: 12px; box-shadow: 0 10px 20px rgba(0,0,0,0.1); aspect-ratio: 1 / 1; object-fit: cover; }
  .product-info-container { padding-top: 1rem; }
  .product-title-in-page { font-size: 2.2rem; font-weight: 700; color: var(--secondary-color); line-height: 1.2; margin: 0 0 1rem; }
  .product-price { font-size: 1.8rem; font-weight: 600; color: var(--primary-color); margin-bottom: 1.5rem; }
  .product-short-description { font-size: 1.05rem; line-height: 1.7; color: #555; margin-bottom: 2rem; }
  
  .btn { display: inline-block; padding: 0.75rem 1.5rem; border: 1px solid transparent; border-radius: 8px; text-align: center; text-decoration: none; font-weight: 600; transition: all 0.2s ease; cursor: pointer; }
  .btn-primary { background-color: var(--primary-color); color: white; border-color: var(--primary-color); }
  .btn-primary:hover { background-color: var(--secondary-color); border-color: var(--secondary-color); }
  .book-now-btn { width: 100%; max-width: 300px; padding: 1rem; font-size: 1.1rem; }

  .product-full-description { margin-top: 4rem; padding-top: 2rem; border-top: 1px solid #eee; }

  /* General Content Styling */
  .product-full-description :global(h1), .product-full-description :global(h2), .product-full-description :global(h3) { color: var(--secondary-color); margin: 2.5rem 0 1rem; line-height: 1.3; font-weight: 600; }
  .product-full-description :global(h1) { font-size: 1.8em; }
  .product-full-description :global(h2) { font-size: 1.6em; }
  .product-full-description :global(h3) { font-size: 1.4em; }
  .product-full-description :global(p) { margin-bottom: 1rem; line-height: 1.8; }
  .product-full-description :global(ul), .product-full-description :global(ol) { margin: 1rem 0 1rem 1.5rem; }
  .product-full-description :global(li) { margin-bottom: 0.75rem; line-height: 1.8; }
  .product-full-description :global(strong) { font-weight: 700; }
  .product-full-description :global(em) { font-style: italic; }
  .product-full-description :global(u) { text-decoration: underline; }
  .product-full-description :global(a) { color: var(--primary-color); text-decoration: underline; }
  
  /* DESKTOP Table Styling */
  .product-full-description :global(table) { width: 100%; border-collapse: collapse; margin: 2rem 0; font-size: 0.95rem; box-shadow: 0 2px 8px rgba(0,0,0,0.05); }
  .product-full-description :global(th), .product-full-description :global(td) { border: 1px solid #ddd; padding: 12px 15px; text-align: left; }
  .product-full-description :global(thead tr) { background-color: #f5f5f5; }
  .product-full-description :global(th) { font-weight: 600; color: var(--secondary-color); }
  .product-full-description :global(tbody tr:nth-child(even)) { background-color: #fafafa; }

  .not-found { text-align: center; padding: 4rem 1rem; }

  /* === MOBILE RESPONSIVE TABLE (The Fix) === */
  @media (max-width: 768px) {
    /* 1. Reset all table elements to be block-level */
    .product-full-description :global(table),
    .product-full-description :global(tbody),
    .product-full-description :global(tr),
    .product-full-description :global(td) {
      display: block;
      width: 100%;
    }

    /* 2. Hide the table header completely */
    .product-full-description :global(thead) {
      display: none;
    }
    
    /* 3. Remove table-specific layout properties */
    .product-full-description :global(table) {
      box-shadow: none;
      border: none;
    }
    
    /* 4. Style each row as a card */
    .product-full-description :global(tr) {
      background: #fff;
      border: 1px solid #e5e5e5;
      border-radius: 8px;
      margin-bottom: 1.5rem;
      padding: 1rem;
      box-shadow: 0 4px 8px rgba(0,0,0,0.04);
    }

    /* 5. Ensure even/odd row styling from desktop is removed */
    .product-full-description :global(tbody tr:nth-child(even)) {
      background-color: #fff;
    }

    /* 6. Style each cell to be a key-value pair */
    .product-full-description :global(td) {
      display: flex; /* Key and value on the same line */
      justify-content: space-between; /* Pushes them apart */
      align-items: center;
      padding: 12px 0;
      border-bottom: 1px solid #f0f0f0;
      text-align: right; /* Aligns the value to the right */
      border-top: none; /* Remove default borders */
    }

    /* 7. Remove the bottom border from the last cell in each card */
    .product-full-description :global(tr td:last-child) {
      border-bottom: none;
    }

    /* 8. Generate the label (the "key") from the data-label attribute */
    .product-full-description :global(td[data-label])::before {
      content: attr(data-label);
      font-weight: 600;
      color: var(--secondary-color);
      text-align: left;
      padding-right: 1rem;
    }
  }
</style>
